buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.3.9.RELEASE"
        classpath "io.freefair.gradle:maven-plugin:3.7.4"
        classpath "io.freefair.gradle:lombok-plugin:3.7.4"
        classpath "io.freefair.gradle:okhttp-plugin:3.7.4"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.21.0"
        classpath "de.marcphilipp.gradle:nexus-publish-plugin:0.2.0"
    }
}

plugins {
    id "io.freefair.git-version" version "3.7.4"
    id "io.freefair.aggregate-javadoc-jar" version "3.7.4"
    id "io.freefair.javadoc-links" version "3.7.4"
}

allprojects {
    repositories {
        mavenCentral()
    }

    group = "io.freefair.okhttp-spring-boot"

    apply plugin: "io.spring.dependency-management"

    dependencyManagement {
        imports {
            mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
        }

        dependencies {
            dependencySet('com.squareup.okhttp3:3.14.4') {
                entry 'okhttp'
                entry 'logging-interceptor'
            }
        }
    }

    plugins.withId("maven-publish") {
        project.apply plugin: 'de.marcphilipp.nexus-publish'
        project.apply plugin: "signing"

        signing {
            required { !version.endsWith('SNAPSHOT') && gradle.taskGraph.hasTask("publish") }
        }

        publishing {
            publications.withType(MavenPublication) {
                pom {
                    name = provider { project.description }
                    description = provider { project.description }
                    url = "https://github.com/freefair/okhttp-spring-boot"
                    licenses {
                        license {
                            name = 'MIT License'
                            url = 'https://opensource.org/licenses/MIT'
                        }
                    }
                    developers {
                        developer {
                            id = 'larsgrefer'
                            name = 'Lars Grefer'
                            email = 'github@larsgrefer.de'
                            timezone = 'Europe/Berlin'
                        }
                    }
                    ciManagement {
                        system = 'Travis CI'
                        url = 'https://travis-ci.org/freefair/okhttp-spring-boot'
                    }
                    issueManagement {
                        system = 'GitHub'
                        url = 'https://github.com/freefair/okhttp-spring-boot/issues'
                    }
                    scm {
                        connection = 'scm:git:https://github.com/freefair/okhttp-spring-boot.git'
                        developerConnection = 'scm:git:git@github.com:freefair/okhttp-spring-boot.git'
                        url = 'https://github.com/freefair/okhttp-spring-boot'
                    }
                }
            }
        }
    }
}

apply plugin: "maven-publish"

publishing {
    publications {
        bom(MavenPublication) {
            artifactId = 'okhttp-spring-boot-dependencies'

            pom {
                name = 'OkHttp Spring Boot Dependencies'
                description = 'OkHttp Spring Boot Dependencies'
            }

            pom.withXml {
                rootProject.subprojects { p ->
                    if (p.pluginManager.hasPlugin('maven-publish')) {
                        def depNode = asNode().dependencyManagement.first().get('dependencies').first().appendNode('dependency')
                        depNode.appendNode('groupId', p.group)
                        depNode.appendNode('artifactId', p.publishing.publications.mavenJava.artifactId)
                        depNode.appendNode('version', p.version)
                    }
                }
            }

            signing.sign it
        }
    }
}

apply plugin: "io.codearte.nexus-staging"

nexusStaging {
    stagingProfileId = '7e6204597a774f'
    username = findProperty('ossrhUser')
    password = findProperty('ossrhPass')
}

apply plugin: "io.freefair.okhttp"

task uploadDocumentation(type: io.freefair.gradle.plugins.okhttp.tasks.UploadFile) {
    dependsOn "aggregateJavadocJar"
    username = "user"
    password = findProperty('freefairDocsPass')
    file = aggregateJavadocJar.archiveFile
    url = "https://docs.freefair.io/api/$project.version?path=okhttp-spring-boot"
}
