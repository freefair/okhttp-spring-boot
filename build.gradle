buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        def freefairGradleVersion = "5.2.1"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.3.4.RELEASE") {
            exclude group: "com.squareup.okhttp3"
        }
        classpath "io.freefair.gradle:maven-plugin:${freefairGradleVersion}"
        classpath "io.freefair.gradle:lombok-plugin:${freefairGradleVersion}"
        classpath "io.freefair.gradle:okhttp-plugin:${freefairGradleVersion}"
        classpath "io.freefair.gradle:git-plugin:${freefairGradleVersion}"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.22.0"
        classpath "de.marcphilipp.gradle:nexus-publish-plugin:0.4.0"
    }
}

apply plugin: "io.freefair.git-version"
apply plugin: "io.freefair.aggregate-javadoc-jar"
apply plugin: "io.freefair.javadoc-links"

allprojects {
    repositories {
        mavenCentral()
    }

    group = "io.freefair.okhttp-spring-boot"

    plugins.withId("java") {
        java {
            withSourcesJar()
            withJavadocJar()
        }

        jar.into("META-INF") {
            from rootProject.file("LICENSE")
        }
    }

    plugins.withId("maven-publish") {
        project.apply plugin: 'de.marcphilipp.nexus-publish'

        nexusPublishing {
            clientTimeout = Duration.ofMinutes(5)
            connectTimeout = Duration.ofMinutes(5)
            repositories {
                sonatype()
            }
        }

        project.apply plugin: "signing"

        signing {
            required { !version.endsWith('SNAPSHOT') && gradle.taskGraph.hasTask("publish") }
        }

        publishing {
            publications.withType(MavenPublication) {
                pom {
                    name = provider { project.description }
                    description = provider { project.description }
                    url = "https://github.com/freefair/okhttp-spring-boot"
                    licenses {
                        license {
                            name = 'MIT License'
                            url = 'https://opensource.org/licenses/MIT'
                        }
                    }
                    developers {
                        developer {
                            id = 'larsgrefer'
                            name = 'Lars Grefer'
                            email = 'github@larsgrefer.de'
                            timezone = 'Europe/Berlin'
                        }
                    }
                    ciManagement {
                        system = 'Travis CI'
                        url = 'https://travis-ci.org/freefair/okhttp-spring-boot'
                    }
                    issueManagement {
                        system = 'GitHub'
                        url = 'https://github.com/freefair/okhttp-spring-boot/issues'
                    }
                    scm {
                        connection = 'scm:git:https://github.com/freefair/okhttp-spring-boot.git'
                        developerConnection = 'scm:git:git@github.com:freefair/okhttp-spring-boot.git'
                        url = 'https://github.com/freefair/okhttp-spring-boot'
                    }
                }
            }
        }
    }
}

apply plugin: "maven-publish"

apply plugin: "io.codearte.nexus-staging"

nexusStaging {
    stagingProfileId = '7e6204597a774f'
    username = findProperty('ossrhUser')
    password = findProperty('ossrhPass')
    delayBetweenRetriesInMillis = 5000
}

apply plugin: "io.freefair.okhttp"

task uploadDocumentation(type: io.freefair.gradle.plugins.okhttp.tasks.UploadFile) {
    dependsOn "aggregateJavadocJar"
    username = "user"
    password = findProperty('freefairDocsPass')
    file = aggregateJavadocJar.archiveFile
    url = "https://docs.freefair.io/api/$project.version?path=okhttp-spring-boot"
}
